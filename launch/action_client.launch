<?xml version="1.0" ?>
<launch>
  <!-- the absolute topic prefix of the action, starting with '/' -->
  <arg name="action" default="/fibonacci" />

  <!-- the name prefix of the robot (important in multirobot setup) -->
  <arg name="prefix" default="" />

  <!-- the action type prefix, with the suffix "Goal" etc. -->
  <arg name="action_type" default="actionlib_tutorials.msg:FibonacciAction" />

  <!-- the IP of the coordination_server rosbridge server -->
  <arg name="mqtt_bridge_ip" default="$(optenv MQTT_BRIDGE_IP localhost)" />

  <!-- the port of the coordination_server mqtt_bridge server -->
  <arg name="mqtt_bridge_port" default="$(optenv MQTT_BRIDGE_PORT 1883)" />

  <group ns="mqtt_action_adapter$(arg prefix)$(arg action)">

    <node pkg="mqtt_bridge" name="mqtt_bridge" type="mqtt_bridge_node.py" output="screen" respawn="true">
      <rosparam subst_value="True">
mqtt:
  client:
    protocol: 4      # MQTTv311
  connection:
    host: $(arg mqtt_bridge_ip)
    port: $(arg mqtt_bridge_port)
    keepalive: 60
# Default is json serialiser, msgpack is more efficient
#serializer: msgpack:dumps
#deserializer: msgpack:loads
bridge:
  # Incoming from MQTT
  - factory: mqtt_bridge.bridge:MqttToRosBridge
    msg_type: 'actionlib_msgs.msg:GoalStatusArray'
    topic_from: '$(arg prefix)/$(arg action)/status'
    topic_to: '$(arg action)/status'
    latched: false
    qos: 0
  - factory: mqtt_bridge.bridge:MqttToRosBridge
    msg_type: '$(arg action_type)Result'
    topic_from: '$(arg prefix)/$(arg action)/result'
    topic_to: '$(arg action)/result'
    latched: false
    qos: 2
  - factory: mqtt_bridge.bridge:MqttToRosBridge
    msg_type: '$(arg action_type)Feedback'
    topic_from: '$(arg prefix)/$(arg action)/feedback'
    topic_to: '$(arg action)/feedback'
    latched: false
    qos: 0
  # IncomOutgoing to MQTT
  - factory: mqtt_bridge.bridge:RosToMqttBridge
    msg_type: '$(arg action_type)Goal'
    topic_from: '$(arg action)/goal'
    topic_to: '$(arg prefix)/$(arg action)/goal'
    latched: false
    qos: 2
  - factory: mqtt_bridge.bridge:RosToMqttBridge
    msg_type: 'actionlib_msgs.msg:GoalID'
    topic_from: '$(arg action)/cancel'
    topic_to: '$(arg prefix)/$(arg action)/cancel'
    latched: false
    qos: 2
      </rosparam>
    </node>
  </group>
</launch>